<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Neo4jException.php" path="/Exception">
    <totals>
      <lines total="65" comments="7" code="58" executable="13" executed="13" percent="100.00"/>
      <methods count="6" tested="6" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Neo4j\QueryAPI\Exception\Neo4jException" start="7" executable="13" executed="13" crap="6">
      <namespace name="Neo4j\QueryAPI\Exception"/>
      <method name="__construct" signature="__construct(array $errorDetails, int $statusCode, ?Throwable $previous)" start="14" end="27" crap="1" executable="7" executed="7" coverage="100"/>
      <method name="fromNeo4jResponse" signature="fromNeo4jResponse(array $response, ?Throwable $exception): self" start="36" end="43" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getErrorCode" signature="getErrorCode(): string" start="45" end="48" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getType" signature="getType(): ?string" start="50" end="53" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getSubType" signature="getSubType(): ?string" start="55" end="58" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getName" signature="getName(): ?string" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="20">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="21">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="22">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="23">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="25">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="26">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
      <line nr="39">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
      </line>
      <line nr="42">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testReadModeWithWriteQuery"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryHandling"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
      </line>
      <line nr="47">
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testInvalidQueryException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
      </line>
      <line nr="52">
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
      </line>
      <line nr="57">
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
      </line>
      <line nr="62">
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testInvalidBookmarkThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructor"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testConstructorWithMissingErrorDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithMissingDetails"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testFromNeo4jResponseWithNullResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jExceptionUnitTest::testExceptionChaining"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\QueryAPI\Exception</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Exception</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Neo4jException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Exception</token>
      </line>
      <line no="8">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorCode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorSubType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE">       </token>
        <token name="T_VARIABLE">$errorDetails</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE">         </token>
        <token name="T_VARIABLE">$statusCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$previous</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorDetails</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Neo.UnknownError'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorParts</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorCode</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorParts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorSubType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorParts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorParts</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$errorDetails</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'An unknown error occurred.'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$statusCode</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$previous</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * Create a Neo4jException instance from a Neo4j error response array.</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * @param array $response The error response from Neo4j.</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @param \Throwable|null $exception Optional previous exception for chaining.</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @return self</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fromNeo4jResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$errorDetails</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$response</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'errors'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Unknown error'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Neo.UnknownError'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorDetails</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">previous</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getErrorCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorCode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getType</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSubType</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorSubType</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errorName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
    </source>
  </file>
</phpunit>
