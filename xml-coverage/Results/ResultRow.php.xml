<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ResultRow.php" path="/Results">
    <totals>
      <lines total="71" comments="6" code="65" executable="10" executed="10" percent="100.00"/>
      <methods count="8" tested="8" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Neo4j\QueryAPI\Results\ResultRow" start="18" executable="10" executed="10" crap="9">
      <namespace name="Neo4j\QueryAPI\Results"/>
      <method name="__construct" signature="__construct(array $data)" start="23" end="26" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetGet" signature="offsetGet(mixed $offset): mixed" start="28" end="35" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="offsetExists" signature="offsetExists($offset): bool" start="38" end="42" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetSet" signature="offsetSet($offset, $value): void" start="44" end="48" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="offsetUnset" signature="offsetUnset($offset): void" start="49" end="54" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="get" signature="get(string $row): mixed" start="55" end="58" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="count" signature="count(): int" start="59" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getIterator" signature="getIterator(): Traversable" start="65" end="69" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="25">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testRunWithWriteAccessMode"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testRunWithReadAccessMode"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testCreateBookmarks"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithExactNames"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithSingleName"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithInteger"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithFloat"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithNull"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithBoolean"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithString"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithArray"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithDate"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithDuration"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithWGS84_2DPoint"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithWGS84_3DPoint"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithCartesian2DPoint"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithCartesian3DPoint"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithNode"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithPath"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithMap"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\DataTypesIntegrationTest::testWithRelationship"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testParseRunQueryResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testTransactionCommit"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testTransactionRollback"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testCreateNodeAndCommit"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testCreateNodeAndRollback"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\ProfiledQueryPlanIntegrationTest::testProfileExistence"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jQueryAPIUnitTest::testRunSuccess"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Neo4jQueryAPIUnitTest::testParseValidResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessGet"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessSetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessUnsetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetReturnsValue"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetThrowsExceptionForInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetExists"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetSetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetUnsetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testGetReturnsValue"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testCount"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testIterator"/>
      </line>
      <line nr="31">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessGet"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetReturnsValue"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetThrowsExceptionForInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testGetReturnsValue"/>
      </line>
      <line nr="32">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetThrowsExceptionForInvalidKey"/>
      </line>
      <line nr="34">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessGet"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetReturnsValue"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testGetReturnsValue"/>
      </line>
      <line nr="41">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessGet"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetReturnsValue"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetGetThrowsExceptionForInvalidKey"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetExists"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testGetReturnsValue"/>
      </line>
      <line nr="47">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessSetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetSetThrowsException"/>
      </line>
      <line nr="52">
        <covered by="Neo4j\QueryAPI\Tests\Unit\ResultRowTest::testArrayAccessUnsetThrowsException"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testOffsetUnsetThrowsException"/>
      </line>
      <line nr="57">
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testGetReturnsValue"/>
      </line>
      <line nr="62">
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testCount"/>
      </line>
      <line nr="68">
        <covered by="Neo4j\QueryAPI\Tests\Unit\Results\ResultRowUnitTest::testIterator"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\QueryAPI\Results</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayIterator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BadMethodCallException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Countable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">IteratorAggregate</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OutOfBoundsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayAccess</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Traversable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> * @template TValue</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT"> * @implements ArrayAccess&lt;string, TValue&gt;</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> * @implements IteratorAggregate&lt;string, TValue&gt;</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResultRow</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayAccess</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Countable</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">IteratorAggregate</token>
      </line>
      <line no="19">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var array&lt;string, TValue&gt; */</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetGet</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">offsetExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OutOfBoundsException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Column </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> not found.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetSet</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BadMethodCallException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">You can't set the value of column </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">offsetUnset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BadMethodCallException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">You can't Unset </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">offsetGet</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$row</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_NAME_FULLY_QUALIFIED">\Override</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getIterator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Traversable</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ArrayIterator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71"/>
    </source>
  </file>
</phpunit>
