<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Node.php" path="/Objects">
    <totals>
      <lines total="34" comments="13" code="21" executable="5" executed="5" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Neo4j\QueryAPI\Objects\Node" start="9" executable="5" executed="5" crap="2">
      <namespace name="Neo4j\QueryAPI\Objects"/>
      <method name="__construct" signature="__construct(array $labels, array $properties)" start="17" end="19" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="toArray" signature="toArray(): array" start="25" end="31" crap="1" executable="4" executed="4" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="Neo4j\QueryAPI\Tests\Integration\AccessModesIntegrationTest::testRunWithWriteAccessMode"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\BookmarksIntegrationTest::testCreateBookmarks"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jOGMTest::testWithNode"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jOGMTest::testWithPath"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jQueryAPIIntegrationTest::testParseRunQueryResponse"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testTransactionCommit"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testTransactionRollback"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testCreateNodeAndCommit"/>
        <covered by="Neo4j\QueryAPI\Tests\Integration\Neo4jTransactionIntegrationTest::testCreateNodeAndRollback"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\OGMUnitTest::testMapNode"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testGetLabelsReturnsCorrectArray"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testGetPropertiesReturnsCorrectArray"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testToArrayReturnsCorrectStructure"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\PathUnitTest::testGetNodesReturnsCorrectArray"/>
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\PathUnitTest::testGetRelationshipsReturnsCorrectArray"/>
      </line>
      <line nr="28">
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testToArrayReturnsCorrectStructure"/>
      </line>
      <line nr="29">
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testToArrayReturnsCorrectStructure"/>
      </line>
      <line nr="27">
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testToArrayReturnsCorrectStructure"/>
      </line>
      <line nr="30">
        <covered by="Neo4j\QueryAPI\Tests\Unit\objects\NodeUnitTest::testToArrayReturnsCorrectStructure"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Neo4j\QueryAPI\Objects</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * Represents a Neo4j Node with labels and properties.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Node</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT">     * Node constructor</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * @param string[] $labels Array of labels for the node.</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * @param array&lt;string, mixed&gt; $properties Associative array of properties.</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$labels</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$properties</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * Convert the Node object to an array representation.</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @return array Node data as an array.</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">toArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_labels'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">labels</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_properties'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">properties</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
    </source>
  </file>
</phpunit>
